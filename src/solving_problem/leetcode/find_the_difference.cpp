#include <iostream>
#include <string>
using namespace std;

// https://leetcode.com/problems/find-the-difference
/*
	- Description:
	You are given two string s and t.
	String t is generated by random shuffling
	string s and then add one more letter at a random position.
	Return the letter that was added to t.

	- Constraints:
	0 <= s.length <= 1000
	t.length == s.length + 1
	s and t consist of lowercase English letters.
*/

class Solution
{
public:
	char findTheDifference_rev01(string s, string t);
	char findTheDifference_rev02(string s, string t);
};

char Solution::findTheDifference_rev01(string s, string t)
{
	int a = 0;
	int b = 0;

	for (char c : s)
	{
		cout << "a: " << a << " + c: '" << c << "' = " << (int)c << endl;
		a += c;
	}
	cout << "Sum of string s = " << a << endl;

	for (char d : t)
	{
		cout << "b: " << b << " + d: '" << d << "' = " << (int)d << endl;
		b += d;
	}

	cout << "Sum of string t = " << b << endl;

	return b - a;
}

/*
	string s <= string t
	=> diff = tSum - sSum
*/
char Solution::findTheDifference_rev02(string s, string t)
{
	for (int i = 0; i < s.size(); ++i)
	{
		t[i + 1] += t[i] - s[i]; // Passing the diff: (t[i] - s[i]) to t[i + 1]
	}

	return t[t.size() - 1]; // the diff will be carried over to the last element
							// eventually
}

int main()
{

	Solution solution;
	cout << solution.findTheDifference_rev02("abc", "dabc") << endl;

	return 0;
}
